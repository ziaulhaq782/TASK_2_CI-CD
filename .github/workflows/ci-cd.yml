name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

  checkov:
    name: Check Terraform Security Compliance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Checkov
        run: pip install checkov
      - name: Run Checkov on Terraform code
        run: checkov -d . --quiet

  sonar:
    name: Static Code Analysis with SonarQube
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v3
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v1.2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  trivy:
    name: Vulnerability Scan with Trivy
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v3
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.50.2_Linux-64bit.deb
          sudo dpkg -i trivy_0.50.2_Linux-64bit.deb
      - name: Build Docker Image
        run: docker build -t microservice-app:latest .
      - name: Scan Docker Image
        run: trivy image --exit-code 1 --severity HIGH,CRITICAL microservice-app:latest

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [sonar, trivy]
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker Image (multi-stage)
        run: docker build -t microservice-app:latest .

  deploy:
    name: Terraform Deploy to AWS
    runs-on: ubuntu-latest
    needs: [checkov, build]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
